# Generated by Django 4.1.4 on 2023-02-05 17:55

from django.conf import settings
import apps.courses.models
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('title', models.CharField(max_length=512)),
            ],
            options={
                'verbose_name_plural': 'Assignments',
                'db_table': 'course_assignments',
            },
        ),
        migrations.CreateModel(
            name='AssignmentQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('question', models.TextField()),
                ('expected', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Assignment Questions',
                'db_table': 'course_assignment_questions',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'course_category',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('code', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('title', models.CharField(max_length=60)),
                ('slug', models.SlugField(blank=True, max_length=500, null=True)),
                ('type', models.CharField(choices=[('Paid', 'Paid'), ('Free', 'Free')], default='Paid', max_length=60)),
                ('subtitle', models.CharField(blank=True, max_length=120, null=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('description', models.JSONField(blank=True, default=dict, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=apps.courses.models.course_main_media)),
                ('promo_video', models.FileField(blank=True, null=True, upload_to=apps.courses.models.course_main_media)),
                ('video_info', models.JSONField(blank=True, default=dict, null=True)),
                ('is_promote', models.BooleanField(default=False)),
                ('skill_level', models.CharField(choices=[('Beginner', 'Skill Beginner'), ('Intermediate', 'Skill Intermediate'), ('Expert', 'Skill Expert'), ('All', 'Skill All')], default='All', max_length=20)),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ar-dz', 'Algerian Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('ig', 'Igbo'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('ky', 'Kyrgyz'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('ms', 'Malay'), ('my', 'Burmese'), ('nb', 'Norwegian Bokm√•l'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('tg', 'Tajik'), ('th', 'Thai'), ('tk', 'Turkmen'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en', max_length=7)),
                ('status', models.CharField(choices=[('Draft', 'Status Draft'), ('Published', 'Status Published'), ('Pending', 'Status Pending'), ('Rejected', 'Status Rejected')], default='Draft', max_length=20)),
                ('begin_msg', models.TextField(blank=True, null=True)),
                ('completion_msg', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=999)),
                ('included_in_promo', models.BooleanField(default=False)),
                ('date_published', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('objectives', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, default=''), blank=True, default=list, size=None)),
                ('learners', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, default=''), blank=True, default=list, size=None)),
                ('requirements', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, default=''), blank=True, default=list, size=None)),
            ],
            options={
                'db_table': 'courses',
            },
        ),
        migrations.CreateModel(
            name='CourseAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('content', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'course_announcements',
            },
        ),
        migrations.CreateModel(
            name='CoursePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('price', models.FloatField(default=0)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('tier_level', models.IntegerField(default=0, help_text='Hint: 0 is free', unique=True)),
                ('price_tier_status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Pricing Tier',
                'db_table': 'course_prices',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CourseReject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('content', models.JSONField(default=dict)),
                ('is_resolve', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Reject (Reasons)',
            },
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('rate', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('content', models.TextField(default='')),
            ],
            options={
                'db_table': 'course_reviews',
            },
        ),
        migrations.CreateModel(
            name='CourseView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'db_table': 'course_viewed',
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('title', models.CharField(max_length=100)),
                ('video', models.FileField(blank=True, null=True, upload_to=apps.courses.models.course_lecture_media)),
                ('video_id', models.CharField(blank=True, max_length=255, null=True)),
                ('video_info', models.JSONField(default=dict)),
                ('article', models.JSONField(blank=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('article', 'Article'), ('video', 'Video')], max_length=10, null=True)),
                ('position', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Lectures',
                'db_table': 'course_lecture',
            },
        ),
        migrations.CreateModel(
            name='ImageUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('height', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(height_field='height', upload_to=apps.courses.models.course_lecture_article, width_field='width')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_uploads', to='courses.section')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'articles_images',
            },
        ),
        migrations.CreateModel(
            name='LectureResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('file', models.FileField(upload_to=apps.courses.models.course_lecture_resources_media)),
            ],
            options={
                'verbose_name_plural': 'Lecture Resources',
                'db_table': 'course_lecture_resources',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('content', models.TextField()),
                ('position', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'course_notes',
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('title', models.CharField(max_length=512)),
            ],
            options={
                'verbose_name_plural': 'Quizzes',
                'db_table': 'course_quiz',
            },
        ),
        migrations.CreateModel(
            name='QuizAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('answer', models.CharField(max_length=512)),
                ('is_correct', models.BooleanField(default=False)),
                ('expected', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'verbose_name_plural': 'Quiz Answers',
                'db_table': 'course_quiz_answers',
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('question', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Quiz Questions',
                'db_table': 'course_quiz_questions',
            },
        ),
        migrations.CreateModel(
            name='Scope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('text', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'course_scope',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('title', models.CharField(max_length=100)),
                ('position', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='StudentAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('type', models.CharField(choices=[('draft', 'Draft'), ('publish', 'Publish')], default='draft', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Student Assignment',
                'db_table': 'course_student_assignment',
            },
        ),
        migrations.CreateModel(
            name='StudentAssignmentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('answer', models.TextField(default='')),
                ('feedback', models.TextField(default='')),
            ],
            options={
                'verbose_name_plural': 'Student Assignment Answers',
                'db_table': 'course_student_assignment_answers',
            },
        ),
        migrations.CreateModel(
            name='StudentQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'verbose_name_plural': 'Student Quiz',
                'db_table': 'course_student_quiz',
            },
        ),
        migrations.CreateModel(
            name='StudentQuizAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'verbose_name_plural': 'Student Quiz Answers',
                'db_table': 'course_student_quiz_answers',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name_plural': 'Sub Categories',
                'db_table': 'course_subcategory',
            },
        ),
        migrations.CreateModel(
            name='SubSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('type', models.CharField(choices=[('lecture', 'Lecture'), ('quiz', 'Quiz'), ('assignment', 'Assignment')], default='lecture', max_length=255)),
                ('position', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name_plural': 'SubSections',
                'db_table': 'course_subsections',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=60)),
                ('slug', models.SlugField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'course_topics',
            },
        ),
        migrations.CreateModel(
            name='SubsectionProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.FloatField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('subsection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='courses.subsection')),
            ],
            options={
                'verbose_name_plural': 'Video Classes progress',
                'db_table': 'course_student_progress',
            },
        ),
    ]
